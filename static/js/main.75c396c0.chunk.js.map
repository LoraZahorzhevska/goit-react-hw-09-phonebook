{"version":3,"sources":["routes.js","Component/Navigation/Navigation.js","Component/AuthNav/AuthNav.js","Component/UserMenu/default-avatar.png","Component/UserMenu/UserMenu.js","Component/AppNavBar/AppNavBar.js","Component/Loader/Loader.js","Component/PrivateRoute.js","Component/PublicRoute.js","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","redux/phonebook/phonebook-action.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","Component/UserMenu/UserMenu.module.css","Component/Container/Container.js","Component/AppNavBar/AppNavBar.module.css","Component/Container/Container.module.css"],"names":["routes","home","register","login","contacts","Navigation","isLoggedIn","useSelector","authSelectors","getIsAuthenticated","className","exact","to","activeClassName","AuthNav","UserMenu","dispatch","useDispatch","name","getUserName","onLogout","useCallback","authOperations","logOut","styles","container","src","defaultAvatar","alt","avatar","Button","type","onClick","variant","color","AppBar","s","Header","Spiner","height","width","PrivateRoute","isAuthenticated","redirectTo","children","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","console","log","getCurrentUser","Container","fallback","path","items","createReducer","fetchContactSuccess","_","payload","addContactSuccess","state","map","contact","includes","alert","deleteContactSuccess","filter","id","loading","fetchContactRequest","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","changeFilter","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","createAction","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","setError","error","axios","defaults","baseURL","headers","common","Authorization","credentials","a","post","response","data","message","logIn","getState","persistToken","get","module","exports"],"mappings":"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","file":"static/js/main.75c396c0.chunk.js","sourcesContent":["const routes = {\n  home: '/',\n  register: '/register',\n  login: '/login',\n  contacts: '/contacts',\n};\nexport default routes;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport routes from '../../routes';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\nimport './Navigation.css';\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <nav>\n      <ul className=\"Navbar\">\n        <li>\n          <NavLink\n            exact\n            to={routes.home}\n            className=\"NavLink\"\n            activeClassName=\"NavLink--active\"\n          >\n            Home\n          </NavLink>\n        </li>\n        {isLoggedIn && (\n          <li>\n            <NavLink\n              to={routes.contacts}\n              className=\"NavLink\"\n              activeClassName=\"NavLink--active\"\n            >\n              Contacts\n            </NavLink>\n          </li>\n        )}\n      </ul>\n    </nav>\n  );\n}\n\n// const Navigation = ({ isLoggedIn }) => {\n//   return (\n//     <nav>\n//       <ul className=\"Navbar\">\n//         <li>\n//           <NavLink\n//             exact\n//             to={routes.home}\n//             className=\"NavLink\"\n//             activeClassName=\"NavLink--active\"\n//           >\n//             Home\n//           </NavLink>\n//         </li>\n//         {isLoggedIn && (\n//           <li>\n//             <NavLink\n//               to={routes.contacts}\n//               className=\"NavLink\"\n//               activeClassName=\"NavLink--active\"\n//             >\n//               Contacts\n//             </NavLink>\n//           </li>\n//         )}\n//       </ul>\n//     </nav>\n//   );\n// };\n\n// const mapStateToProps = state => ({\n//   isLoggedIn: authSelectors.getIsAuthenticated(state),\n// });\n\n// export default connect(mapStateToProps)(Navigation);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n// import s from './AuthNav.module.css';\n\nconst AuthNav = () => (\n  <div>\n    <ul className=\"Navbar\">\n      <li\n      // className={s.ItemAuth}\n      >\n        <NavLink\n          to=\"/register\"\n          exact\n          className=\"NavLink\"\n          activeClassName=\"NavLink--active\"\n        >\n          Сheck in\n        </NavLink>\n      </li>\n      <li\n      // className={s.ItemNav}\n      >\n        <NavLink\n          to=\"/login\"\n          exact\n          className=\"NavLink\"\n          activeClassName=\"NavLink--active\"\n        >\n          Login\n        </NavLink>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default AuthNav;\n","export default __webpack_public_path__ + \"static/media/default-avatar.a9d44b06.png\";","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from '../UserMenu/default-avatar.png';\nimport styles from './UserMenu.module.css';\nimport { Button } from '@material-ui/core';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n  //делаем мемоизацию, с помощью useCallback, что бы функция\n  // onLogout не ререндилась каждый раз:\n  const onLogout = useCallback(() => {\n    dispatch(authOperations.logOut());\n  }, [dispatch]);\n\n  return (\n    <div className={styles.container}>\n      <img src={defaultAvatar} alt=\"Avatar\" className={styles.avatar} />\n      <span className={styles.name}>Welcome, {name}</span>\n      <Button\n        type=\"button\"\n        onClick={onLogout}\n        variant=\"outlined\"\n        color=\"primary\"\n      >\n        Logout\n      </Button>\n    </div>\n  );\n}\n\n// const UserMenu = ({ name, avatar, onLogout }) => (\n//   <div className={styles.container}>\n//     <img src={avatar} alt=\"Avatar\" className={styles.avatar} />\n//     <span className={styles.name}>Welcome, {name}</span>\n//     <Button type=\"button\" onClick={onLogout} variant=\"outlined\" color=\"primary\">\n//       Logout\n//     </Button>\n//   </div>\n// );\n// const mapStateToProps = state => ({\n//   name: authSelectors.getUserName(state),\n//   avatar: defaultAvatar,\n// });\n\n// const mapDispatchToProps = {\n//   onLogout: authOperations.logOut,\n// };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Navigation from '../Navigation';\nimport AuthNav from '../AuthNav';\nimport UserMenu from '../UserMenu';\nimport { authSelectors } from '../../redux/auth';\nimport s from './AppNavBar.module.css';\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n\n  return (\n    <header className={s.Header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n\n// const AppBar = ({ isAuthenticated }) => {\n//   return (\n//     <header className={s.Header}>\n//       <Navigation />\n//       {isAuthenticated ? <UserMenu /> : <AuthNav />}\n//     </header>\n//   );\n// };\n\n// const mapStateToProps = state => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n// export default connect(mapStateToProps)(AppBar);\n","import React from 'react';\nimport Loader from \"react-loader-spinner\";\n\nconst Spiner = () => {\n    return (\n         <div className='spinner-conteiner'>\n            <Loader\n             type=\"Circles\"\n             color=\"#00BFFF\"\n             height={100}\n            width={100} />\n        </div>\n    )\n}\nexport default Spiner;","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n/**\n * - Если маршрут приватный, и пользователь залогинен, рендерит компонент,\n * - В противном случае рендерит редирект на /login\n */\nexport default function PrivateRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport authSelectors from '../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nexport default function PublicRoute({\n  isAuthenticated,\n  redirectTo,\n  children,\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        children\n      )}\n    </Route>\n  );\n}\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Switch } from 'react-router-dom';\nimport routes from './routes';\nimport './styles.css';\nimport AppBar from './Component/AppNavBar';\nimport Spinner from './Component/Loader';\nimport Container from './Component/Container';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './Component/PrivateRoute';\nimport PublicRoute from './Component/PublicRoute';\n// import ContactForm from './Component/ContactForm';\n// import Filter from './Component/Filter';\n// import ContactList from './Component/ContactList';\nconst HomeView = lazy(() =>\n  import('./views/HomeView.js' /* webpackChunkName: \"home-view\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /*webpackChunkName: \"register-view\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /*webpackChunkName: \"login-view\" */),\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /*webpackChunkName: \"contacts-view\" */),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    console.log('useEffect вместо  componentDidMount');\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <>\n      <AppBar />\n      <Container>\n        <Suspense fallback={<Spinner />}>\n          <Switch>\n            <PublicRoute exact path={routes.home}>\n              <HomeView />\n            </PublicRoute>\n\n            <PublicRoute\n              path={routes.register}\n              restricted\n              redirectTo={routes.home}\n            >\n              <RegisterView />\n            </PublicRoute>\n\n            <PublicRoute\n              path={routes.login}\n              restricted\n              redirectTo={routes.home}\n            >\n              <LoginView />\n            </PublicRoute>\n\n            <PrivateRoute path={routes.contacts} redirectTo={routes.login}>\n              <ContactsView />\n            </PrivateRoute>\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  );\n}\n\n// class App extends Component {\n//   componentDidMount() {\n//     this.props.onGetCurrentUser();\n//   }\n//   render() {\n//     return (\n//       <>\n//         <AppBar />\n//         <Container>\n//           <Suspense fallback={<Spinner />}>\n//             <Switch>\n//               <PublicRoute exact path={routes.home} component={HomeView} />\n//               <PublicRoute\n//                 path={routes.register}\n//                 restricted\n//                 redirectTo={routes.home}\n//                 component={RegisterView}\n//               />\n//               <PublicRoute\n//                 path={routes.login}\n//                 restricted\n//                 redirectTo={routes.home}\n//                 component={LoginView}\n//               />\n//               <PrivateRoute\n//                 path={routes.contacts}\n//                 component={ContactsView}\n//                 redirectTo={routes.login}\n//               />\n//             </Switch>\n//           </Suspense>\n//         </Container>\n//       </>\n//     );\n//   }\n// }\n\n// const mapDispatchToProps = {\n//   onGetCurrentUser: authOperations.getCurrentUser,\n// };\n\n// export default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n// import contacts from '../../json/contacts.json';\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './phonebook-action';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (_, { payload }) => payload,\n  // [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [addContactSuccess]: (state, { payload }) => {\n    if (state.map(contact => contact.name).includes(payload.name)) {\n      return alert(`${payload.name} is already exist`);\n    }\n    return [...state, payload];\n  },\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport contactsReducer from './phonebook/phonebook-reducer';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport { authReducer } from './auth';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\n// const rootReducer = combineReducers({\n//   contacts: persistReducer(persistConfig, rootReducer),\n// });\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\nimport './styles.css';\nimport 'modern-normalize/modern-normalize.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nexport const fetchContactError = createAction('contacts/fetchContactError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","/* eslint-disable import/no-anonymous-default-export */\nimport { createAction } from '@reduxjs/toolkit';\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registerRequest());\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistToken }, //то же , что и state.auth.token//\n  } = getState();\n\n  if (!persistToken) {\n    return;\n  }\n\n  token.set(persistToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  register,\n  logIn,\n  logOut,\n  getCurrentUser,\n};\n","/* eslint-disable import/no-anonymous-default-export */\nconst getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUserName = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUserName,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__2snUx\",\"avatar\":\"UserMenu_avatar__3MFCS\",\"name\":\"UserMenu_name__v-xj-\"};","import React from 'react';\nimport styles from './Container.module.css'\n\nconst Container = ({ children }) =>\n    <div className={styles.Container}>{children}</div>\n    \nexport default Container;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"AppNavBar_Header__3dDc4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__17zpJ\"};"],"sourceRoot":""}